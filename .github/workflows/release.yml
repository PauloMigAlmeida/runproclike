name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push amd64 & arm64 docker images
        id: push
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: .github/docker/Dockerfile
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  cargo_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cargo Login
        run: cargo login ${{ secrets.CARGO_TOKEN }}
      - name: Cargo Publish
        run: cargo publish

  create_gh_release:
    needs: [cargo_publish, docker_push]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set vars
        id: vars
        run: echo "crate_version=$(cargo metadata --format-version=1 --no-deps | jq -r '.packages[0].version')" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build amd64 & arm64 binaries
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: .github/docker/Dockerfile.build
          push: false
          platforms: linux/amd64, linux/arm64
          outputs: .

      - name: Package before release
        run: |
          tar -czvf runproclike-linux-amd64-${{ steps.vars.outputs.crate_version }}.tar.gz -C linux_amd64 runproclike-linux-amd64
          tar -czvf runproclike-linux-arm64-${{ steps.vars.outputs.crate_version }}.tar.gz -C linux_arm64 runproclike-linux-arm64

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          token: ${{ secrets.CUSTOM_PAT }}
          files: |
            runproclike-linux-amd64-${{ steps.vars.outputs.crate_version }}.tar.gz
            runproclike-linux-arm64-${{ steps.vars.outputs.crate_version }}.tar.gz

